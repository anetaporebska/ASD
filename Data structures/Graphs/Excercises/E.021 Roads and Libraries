"""
Hackerrank - graphs

"""
import math
import os
import random
import re
import sys

# Complete the roadsAndLibraries function below.

class Node:
    def __init__(self,id):
        self.id=id
        self.parent=self
        self.rank=0

def find_set(x):
    if x!=x.parent:
        x.parent=find_set(x.parent)
    return x.parent

def union(x,y):
    x=find_set(x)
    y=find_set(y)
    if x.rank>y.rank:
        y.parent=x
    else:
        x.parent=y
        if x.rank==y.rank:
            y.rank+=1

def make_set(v):
    return Node(v)

def roadsAndLibraries(n, c_lib, c_road, cities):
    if c_lib < c_road:
        return n*c_lib
    sets=[None]*n
    for i in range(n):
        sets[i]=make_set(i)
    count_roads=0
    for i in range(len(cities)):
        if find_set(sets[cities[i][0]-1])!= find_set(sets[cities[i][1]-1]):
            union(sets[cities[i][0]-1],sets[cities[i][1]-1])
            count_roads+=1
    count_lib=1
    for i in range(1,n):
        if find_set(sets[i-1])!= find_set(sets[i]):
            count_lib+=1
            union(sets[i-1], sets[i])

    return count_roads*c_road + count_lib*c_lib

print(roadsAndLibraries(6,5,3,[(0,1),(0,2),(0,5),(2,3),(1,3),(3,4),(2,4)]))
print(roadsAndLibraries(9,91,84,[(8,2),(2,9)])) #805
print(roadsAndLibraries(5,92,23,[(2,1),(5,3),(5,1),(3,4),(3,1),(5,4),(4,1),(5,2),(4,2)]))
