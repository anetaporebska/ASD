"""
Dany jest zbiór przedziałów I={[a1,b1],...,[an,bn]}. Mówimy, że przedział [a1,bi] deaktywuje przedział [aj,bj],
jeśli ai>=aj oraz bi<=bj (czyli pierwszy jest podzbiorem drugiego). Proszę zaproponować algorytm, który znajduje
podzbiór I o maksymalnym rozmiarze taki, że żaden przedział nie jest deaktywowany przez inny (innymi słowy,
należy dany przedział usunąć jeśli jest nadzbiorem innego, a spośród identycznych przedziaów usunąć wszystkie poza
jednym).


"""

def czy_nadzbior_p2(p1,p2):
    if p1[0]<=p2[0] and p1[1]>=p2[1]:
        return True

    return False

def nadzbior(I):
    I.sort()
    print(I)
    i=0
    j=1
    n=len(I)
    take=[True]*n

    while i<n and j<n:
        if czy_nadzbior_p2(I[j],I[i]):
            take[j]=False
            j+=1
        if czy_nadzbior_p2(I[i],I[j]):
            take[i]=False
            i=j
            j+=1
        else:
            i=j
            j+=1

    for i in range(n):
        if take[i]:
            print(I[i])




I=[(1,2),(3,5),(2,4),(8,9),(2,4),(1,5),(5,7),(2,7)]
nadzbior(I)
print("")
I=[(3,4),(5,6),(1,3),(4,5),(9,10),(4,5),(1,9),(2,7),(4,5),(3,8),(3,7),(2,10),(8,15),(14,16),(15,19),(10,19),(20,23)]
nadzbior(I)
